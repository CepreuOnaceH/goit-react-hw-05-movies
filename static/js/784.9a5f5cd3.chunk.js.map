{"version":3,"file":"static/js/784.9a5f5cd3.chunk.js","mappings":"8OACaA,E,OAAqBC,GAAAA,IAAH,wD,SCkF/B,EA9EqB,WAAO,IAAD,EACnBC,GAASC,EAAAA,EAAAA,MACf,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KAkCA,OAhCAC,EAAAA,EAAAA,YAAU,WAENN,EAASO,SAASC,SAAS,SAC3BR,EAASO,SAASC,SAAS,YAI7BL,EAAYH,EAASS,MACtB,GAAE,CAACT,KAEJM,EAAAA,EAAAA,YAAU,WACRD,EAAS,KACTK,EAAAA,EAAAA,IAAkBf,EAAOgB,SACtBC,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GAER,MADAT,EAAS,+BACH,IAAIU,MAEZ,OAAOF,EAAKG,MACb,IACAJ,MAAK,SAAAK,GACJ,GAAiC,IAA7BC,OAAOC,KAAKF,GAAMG,OAEpB,MADAf,EAAS,mDACH,IAAIU,MAGZ,OAAOhB,EAAUkB,EAClB,IAEAI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAAC3B,EAAO8B,GAAI9B,EAAOgB,WAGpB,iCACE,SAAC,KAAD,CAAMe,GAAItB,EAAQ,IAAMF,EAAxB,SAAkC,YACjCE,IAAS,wBAAKA,IACdN,IACC,UAACL,EAAD,YACE,gBACEkC,IAAG,0CAAqC7B,EAAK8B,aAC7CC,IAAK/B,EAAKgC,SAEZ,4BACE,0BACGhC,EAAKgC,MAAM,KAAGC,OAAOC,SAASlC,EAAKmC,cAAc,QAEpD,yBAAG,eAAaC,KAAKC,MAA0B,GAApBrC,EAAKsC,cAAmB,QACnD,wBAAI,cACJ,uBAAItC,EAAKuC,YACT,wBAAI,YACJ,iCAAIvC,EAAKwC,cAAT,aAAI,EAAaC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,YAGjD,uBAGFtC,IACA,4BACE,yBACE,SAAC,KAAD,CAAMsB,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAIzB,SAAC,KAAD,MAGL,C,uJCjFD,IAAMiB,EAAU,mCAEHC,EAAsB,WACjC,OAAOC,MAAM,2DAAD,OACiDF,GAE9D,EACYG,EAAmB,SAAAC,GAC9B,OAAOF,MAAM,qDAAD,OAC2CF,EAD3C,kBAC4DI,GAEzE,EACYrC,EAAoB,SAAAe,GAC/B,OAAOoB,MAAM,sCAAD,OAAuCpB,EAAvC,oBAAqDkB,GAClE,EACYK,EAAoB,SAAAvB,GAC/B,OAAOoB,MAAM,sCAAD,OAC4BpB,EAD5B,4BACkDkB,GAE/D,EACYM,EAAoB,SAAAxB,GAC/B,OAAOoB,MAAM,sCAAD,OAC4BpB,EAD5B,4BACkDkB,GAE/D,C","sources":["components/MovieDetails/MovieDetailsStyles.styled.js","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const MovieDetailsStyles = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieDetails } from 'services/api';\nimport { MovieDetailsStyles } from './MovieDetailsStyles.styled';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const [film, setFilmId] = useState(null);\n  const location = useLocation();\n  const [lastPage, setLastPage] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (\n      location.pathname.includes('cast') ||\n      location.pathname.includes('reviews')\n    ) {\n      return;\n    }\n    setLastPage(location.state);\n  }, [location]);\n\n  useEffect(() => {\n    setError('');\n    fetchMovieDetails(params.movieId)\n      .then(resp => {\n        if (!resp.ok) {\n          setError('Sorry, something went wrong');\n          throw new Error();\n        }\n        return resp.json();\n      })\n      .then(data => {\n        if (Object.keys(data).length === 0) {\n          setError('Sorry, there is no information about this film.');\n          throw new Error();\n        }\n\n        return setFilmId(data);\n      })\n\n      .catch(err => console.log(err));\n  }, [params.id, params.movieId]);\n\n  return (\n    <>\n      <Link to={error ? '/' : lastPage}>Go back</Link>\n      {error && <h3>{error}</h3>}\n      {film && (\n        <MovieDetailsStyles>\n          <img\n            src={`https://image.tmdb.org/t/p/w400/${film.poster_path}`}\n            alt={film.title}\n          />\n          <div>\n            <h2>\n              {film.title} ({Number.parseInt(film.release_date)})\n            </h2>\n            <p>User score: {Math.round(film.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{film.overview}</p>\n            <h4>Genres</h4>\n            <p>{film.genres?.map(genre => genre.name).join(', ')}</p>\n          </div>\n\n          <div></div>\n        </MovieDetailsStyles>\n      )}\n      {!error && (\n        <div>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </div>\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n};\nexport const fetchMovieByName = value => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${value}`\n  );\n};\nexport const fetchMovieDetails = id => {\n  return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`);\n};\nexport const fetchMovieCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\nexport const fetchMovieReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n};\n"],"names":["MovieDetailsStyles","styled","params","useParams","useState","film","setFilmId","location","useLocation","lastPage","setLastPage","error","setError","useEffect","pathname","includes","state","fetchMovieDetails","movieId","then","resp","ok","Error","json","data","Object","keys","length","catch","err","console","log","id","to","src","poster_path","alt","title","Number","parseInt","release_date","Math","round","vote_average","overview","genres","map","genre","name","join","API_KEY","fetchTrendingMovies","fetch","fetchMovieByName","value","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}