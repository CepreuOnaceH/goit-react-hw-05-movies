{"version":3,"file":"static/js/555.0e422570.chunk.js","mappings":"oNACaA,E,OAAoBC,GAAAA,KAAH,4F,SC4B9B,EAzBoB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,UAACL,EAAD,CAAmBM,SAXC,SAAAC,GAEpB,GADAA,EAAEC,kBACEJ,EAAWK,OAIb,OAAOC,MAAM,0BAHbR,EAAcE,EAAWK,OAAOE,eAChCN,EAAc,GAIjB,EAGC,WACE,kBAAOO,SAhBW,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACjCR,EAAcQ,EACf,EAcmCA,MAAOT,KACvC,mBAAQW,KAAK,SAAb,SAAsB,aAG3B,E,iBCLD,EAnBkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBC,MAAK,UAAKN,EAASO,UAAd,OAAyBP,EAASQ,QAFzC,SAIGL,EAAMM,SALFN,EAAME,GADA,KAYtB,E,SCoCD,EAlDmB,WACjB,OAAkCnB,EAAAA,EAAAA,UAAS,IAA3C,eAAOwB,EAAP,KAAkBC,EAAlB,KACA,GAAoCzB,EAAAA,EAAAA,UAAS,IAA7C,eAAO0B,EAAP,KAAmB3B,EAAnB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAO2B,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAoCA,OAlCAC,EAAAA,EAAAA,YAAU,WACJF,EAAaG,IAAI,UACnBlC,EAAc+B,EAAaG,IAAI,SAElC,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACHN,IAILE,EAAS,KACTM,EAAAA,EAAAA,IAAiBR,GACdS,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GAER,MADAT,EAAS,0BACH,IAAIU,MAEZ,OAAOF,EAAKG,MACb,IACAJ,MAAK,SAAAK,GACJ,GAA4B,IAAxBA,EAAKC,QAAQC,OAEf,MADAd,EAAS,4CAAD,OAA6CF,EAA7C,OACF,IAAIY,MAGZb,EACEe,EAAKC,QAAQzB,KAAI,SAAA2B,GAAI,MAAK,CAAEpB,MAAOoB,EAAKpB,MAAOJ,GAAIwB,EAAKxB,GAAnC,IAExB,IACAyB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,IACZd,EAAgB,CAAEiB,MAAOtB,IAC1B,GAAE,CAACA,EAAYK,KAGd,iCACE,SAAC,EAAD,CAAahC,cAAeA,IAE3B4B,IAAS,wBAAKA,KACbA,GAASH,EAAUkB,OAAS,IAAK,SAAC,EAAD,CAAW7B,OAAQW,MAG3D,C,uJCtDD,IAAMyB,EAAU,mCAEHC,EAAsB,WACjC,OAAOC,MAAM,2DAAD,OACiDF,GAE9D,EACYf,EAAmB,SAAAxB,GAC9B,OAAOyC,MAAM,qDAAD,OAC2CF,EAD3C,kBAC4DvC,GAEzE,EACY0C,EAAoB,SAAAjC,GAC/B,OAAOgC,MAAM,sCAAD,OAAuChC,EAAvC,oBAAqD8B,GAClE,EACYI,EAAoB,SAAAlC,GAC/B,OAAOgC,MAAM,sCAAD,OAC4BhC,EAD5B,4BACkD8B,GAE/D,EACYK,EAAoB,SAAAnC,GAC/B,OAAOgC,MAAM,sCAAD,OAC4BhC,EAD5B,4BACkD8B,GAE/D,C","sources":["components/SearchMovie/SearchMovieStyles.styled.js","components/SearchMovie/SearchMovie.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const SearchMovieStyles = styled.form`\n  padding-top: 40px;\n  display: flex;\n  justify-content: center;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchMovieStyles } from './SearchMovieStyles.styled';\n\nconst SearchMovie = ({ setSearchText }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handlerChange = ({ target: { value } }) => {\n    setInputValue(value);\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim()) {\n      setSearchText(inputValue.trim().toLowerCase());\n      setInputValue('');\n    } else {\n      return alert('Please, write anything');\n    }\n  };\n\n  return (\n    <SearchMovieStyles onSubmit={handlerSubmit}>\n      <input onChange={handlerChange} value={inputValue} />\n      <button type=\"submit\">Search</button>\n    </SearchMovieStyles>\n  );\n};\n\nexport default SearchMovie;\n\nSearchMovie.propTypes = {\n  setSearchText: PropTypes.func.isRequired,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={`${location.pathname}${location.search}`}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import SearchMovie from 'components/SearchMovie/SearchMovie';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByName } from 'services/api';\n\nconst MoviesPage = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    if (searchParams.get('query')) {\n      setSearchText(searchParams.get('query'));\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (!searchText) {\n      return;\n    }\n\n    setError('');\n    fetchMovieByName(searchText)\n      .then(resp => {\n        if (!resp.ok) {\n          setError('Sorry, something wrong');\n          throw new Error();\n        }\n        return resp.json();\n      })\n      .then(data => {\n        if (data.results.length === 0) {\n          setError(`Sorry, there are no results for request \"${searchText}\".`);\n          throw new Error();\n        }\n\n        setMovieList(\n          data.results.map(film => ({ title: film.title, id: film.id }))\n        );\n      })\n      .catch(err => console.log(err));\n    setSearchParams({ query: searchText });\n  }, [searchText, setSearchParams]);\n\n  return (\n    <>\n      <SearchMovie setSearchText={setSearchText} />\n\n      {error && <h3>{error}</h3>}\n      {!error && movieList.length > 0 && <MovieList movies={movieList} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","const API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n};\nexport const fetchMovieByName = value => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${value}`\n  );\n};\nexport const fetchMovieDetails = id => {\n  return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`);\n};\nexport const fetchMovieCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\nexport const fetchMovieReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n};\n"],"names":["SearchMovieStyles","styled","setSearchText","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","alert","toLowerCase","onChange","value","target","type","movies","location","useLocation","map","movie","to","id","state","pathname","search","title","movieList","setMovieList","searchText","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","get","fetchMovieByName","then","resp","ok","Error","json","data","results","length","film","catch","err","console","log","query","API_KEY","fetchTrendingMovies","fetch","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}